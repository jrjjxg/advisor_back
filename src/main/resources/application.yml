server:
  port: 9000
  address: 0.0.0.0
  undertow:
    io-threads: 16
    worker-threads: 4000
    buffer-size: 1024
    direct-buffers: true
  compression:
    enabled: true
    min-response-size: 1

spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/ai?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&allowMultiQueries=true
    username: root
    password: 123456
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    cors:
      allowed-origins:
        - http://localhost:5173
        - file://
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600
  mail:
    host: smtp.qq.com
    username: 2902756263@qq.com
    password: euvqajvjrpnndgda
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            enable: true
  jvm:
    args: --add-opens java.base/java.lang.invoke=ALL-UNNAMED
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

mybatis-plus:
  mapper-locations: classpath:mapper/**/*.xml
  type-aliases-package: com.advisor.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: assign_uuid
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0

# 文件上传配置
file:
  upload:
    path: D:/uploads
    avatar:
      path: ${file.upload.path}/avatars
    community:
      path: ${file.upload.path}/community
  access:
    url: http://localhost:9000/uploads
    avatar:
      url: ${file.access.url}/avatars
    community:
      url: ${file.access.url}/community

# 是的，这些配置已经设置好了。让我解释一下这些配置：
# 配置解释
# 文件存储结构：
# file.upload.path: D:/uploads - 这是所有上传文件的根目录
# 在这个根目录下，有两个子目录：
# avatars 文件夹：存储用户头像
# community 文件夹：存储社区相关图片
# ${file.upload.path}/avatars 的含义：
# ${...} 是Spring的属性占位符语法
# 它会引用前面定义的file.upload.path属性的值
# 所以${file.upload.path}/avatars实际上等于D:/uploads/avatars
# 这种写法的好处是：如果将来修改根目录，子目录会自动跟着变化
# 访问URL结构：
# file.access.url: http://localhost:9000/uploads - 这是访问文件的基础URL
# ${file.access.url}/avatars 等于 http://localhost:9000/uploads/avatars
# 这意味着存储在D:/uploads/avatars目录下的文件可以通过http://localhost:9000/uploads/avatars/文件名访问
jwt:
  secret: your_jwt_secret_key_here_should_be_very_long_and_secure_12345678901234567890
  expiration: 86400000 # 24小时，单位毫秒

# 七牛云配置
qiniu:
  access-key: 94BvdJExQ963UsZRcc2rMNoIfoZb1-1CfCrsjoEg
  secret-key: 3Bpbjy6Cn68P9Sglbm4KSv32MgzJuFEbUqXzmulx
  bucket: myai-resource
  domain: http://su5mwlhe1.hb-bkt.clouddn.com

# 添加到您现有的application.yml
dashscope:
  api-key: ${ALI_AI_KEY}
  model-name: qwen-max

emotion.recognition.api.url: http://localhost:5000

# 聊天机器人API配置
chatbot:
  api:
    url: http://localhost:5000
